{"version":3,"sources":["./src/app/project/newproject/builderOption/builderOption.component.html","./src/app/project/newproject/newproject.component.html","./src/app/project/project.component.html","./src/app/project/projectList/projectList.component.html","./src/app/project/tablePreview/tablePreview.component.html","./src/app/project/modals/generatormodeconfig.ts","./src/app/project/modals/project.ts","./src/app/project/modals/projectInfo.ts","./src/app/project/newproject/builderOption/BuilderContainer.component.ts","./src/app/project/newproject/builderOption/builderOption.component.ts","./src/app/project/newproject/buildtask.component.ts","./src/app/project/newproject/generatormode.component.ts","./src/app/project/newproject/newproject.component.ts","./src/app/project/newproject/projectinfo.component.ts","./src/app/project/project.component.css","./src/app/project/project.component.ts","./src/app/project/project.module.ts","./src/app/project/project.routing.module.ts","./src/app/project/projectList/projectList.component.css","./src/app/project/projectList/projectList.component.ts","./src/app/project/tablePreview/tablePreview.component.ts"],"names":[],"mappings":"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","file":"project-project-module.js","sourcesContent":["export default \"<form nz-form [formGroup]=\\\"validateForm\\\">\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>模块名</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"name\\\" formControlName=\\\"name\\\" placeholder=\\\"模块名\\\" />\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>是否只生成主表</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <nz-switch id=\\\"isServiceOnly\\\" formControlName='isServiceOnly'>\\n      </nz-switch>\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\">前缀</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"prefix\\\" formControlName='prefix' placeholder=\\\"前缀 ex: I -> 文件名= I+实体名+后缀\\\" />\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\">忽略数据库表中的前缀的</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"splitDot\\\" formControlName='splitDot' placeholder=\\\"忽略数据库表中的前缀的 前缀分隔符 （与IsIgnorePrefix搭配）\\\" />\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>名称是否忽略前缀</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <nz-switch id=\\\"isIgnorePrefix\\\" formControlName='isIgnorePrefix'>\\n      </nz-switch>\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>输出路径</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"outPutPath\\\" formControlName=\\\"outPutPath\\\" placeholder=\\\"输出路径\\\" />\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>名称转换模式</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"mode\\\" formControlName=\\\"mode\\\" placeholder=\\\"名称转换模式 默认不转换\\\" />\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>模板路径</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <button nz-button type=\\\"button\\\" (click)=\\\"selectTemplate()\\\">选择</button>\\n      <label>{{this.builder.template.templatePath}}</label>\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\">后缀</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"suffix\\\" formControlName=\\\"suffix\\\" placeholder=\\\"后缀 ex:Repository-> 文件名= 前缀+实体名+Repository\\\" />\\n    </nz-form-control>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"12\\\">\\n    <nz-form-label [nzSm]=\\\"5\\\" [nzXs]=\\\"24\\\" nzRequired>文件后缀</nz-form-label>\\n    <nz-form-control [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <input nz-input id=\\\"fileExtensions\\\" formControlName=\\\"fileExtensions\\\" placeholder=\\\"文件后缀\\\" />\\n    </nz-form-control>\\n  </div>\\n  <nz-form-control [nzSm]=\\\"12\\\" [nzXs]=\\\"24\\\">\\n    <nz-form-control [nzOffset]=\\\"5\\\" [nzSm]=\\\"9\\\" [nzXs]=\\\"24\\\">\\n      <button nz-button (click)='submitForm()' [nzType]=\\\"'primary'\\\" style='float'>提交</button>\\n    </nz-form-control>\\n  </nz-form-control>\\n  <nz-modal nzWidth=\\\"80vw\\\" [(nzVisible)]=\\\" this.templateSel \\\" nzTitle=\\\"选择模板\\\" (nzOnOk)=\\\"this.templateSel = false\\\"\\n    (nzOnCancel)=\\\"this.templateSel = false\\\">\\n    <app-list-template [isController]='true' (selectTemplate)=\\\"selectCallBack($event)\\\"></app-list-template>\\n  </nz-modal>\\n</form>\"","export default \"<nz-steps [nzCurrent]=\\\"current\\\" nzSize=\\\"default\\\">\\n  <nz-step nzTitle=\\\"项目基本信息填写\\\"></nz-step>\\n  <nz-step nzTitle=\\\"模式选择\\\"></nz-step>\\n  <nz-step nzTitle=\\\"表构建器参数填写\\\"></nz-step>\\n  <nz-step nzTitle=\\\"全表构建器参数填写\\\"></nz-step>\\n  <nz-step nzTitle=\\\"生成\\\"></nz-step>\\n  <nz-step nzTitle=\\\"查看代码\\\"></nz-step>\\n</nz-steps>\\n<div class=\\\"steps-content\\\">\\n  <app-project-info [projectId]=\\\"this.projectId\\\" (callBack)=\\\"callBack($event)\\\" *ngIf=\\\"current === 0\\\">\\n  </app-project-info>\\n  <app-generator-mode [project]=\\\"this.project\\\" (callBack)=\\\"callBack($event)\\\" *ngIf=\\\"current === 1\\\">\\n  </app-generator-mode>\\n  <app-builder-container *ngIf=\\\"current === 2\\\" (callBack)=\\\"builderCallBack($event)\\\" [builders]=\\\"this.project.builders\\\"\\n    [projectid]=\\\"this.projectId\\\" [type]=\\\"0\\\">\\n  </app-builder-container>\\n  <app-builder-container *ngIf=\\\"current === 3\\\" [builders]=\\\"this.project.globalBuilders\\\" [projectid]=\\\"this.projectId\\\"\\n    [type]=\\\"1\\\">\\n  </app-builder-container>\\n  <app-build-task (callBack)=\\\"IsFinish($event)\\\" *ngIf=\\\"current === 4\\\" [projectid]=\\\"this.projectId\\\">\\n  </app-build-task>\\n  <div *ngIf=\\\"current === 5\\\">\\n    <h3>生成成功 生成路径为：{{this.getCodePath()}}</h3>\\n  </div>\\n</div>\\n<div nz-col class=\\\"steps-action\\\">\\n  <nz-button-group [nzSize]=\\\"large\\\">\\n    <button nz-button nzType=\\\"default\\\" (click)=\\\"pre()\\\" *ngIf=\\\"current > 0 && current !== 5\\\"><i nz-icon\\n        nzType=\\\"left\\\"></i>上一步</button>\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"this.currentFinish[this.current] &&current < 6\\\">下一步<i\\n        nz-icon nzType=\\\"right\\\"></i></button>\\n    <button nz-button nzType=\\\"primary\\\" [nzSize]=\\\"large\\\" class=\\\"stepbtn\\\" (click)=\\\"finished()\\\" *ngIf=\\\"current === 5\\\"><i\\n        nz-icon nzType=\\\"check\\\" nzTheme=\\\"outline\\\"></i>完成 </button>\\n  </nz-button-group>\\n\\n</div>\"","export default \"<div>\\n  <div nz-row [nzGutter]=\\\"30\\\" nzType='flex' nzJustify=\\\"start\\\">\\n    <div nz-col nzXs=\\\"24\\\" nzSm=\\\"12\\\" nzMd=\\\"8\\\" nzLg=\\\"6\\\" nzXl=\\\"4\\\">\\n      <nz-card nzTitle=\\\"新建项目\\\" nzHoverable [nzCover]=\\\"addProject\\\" (click)=\\\"newProject()\\\">\\n        <nz-card-meta nzTitle=\\\"新建\\\" nzDescription=\\\"添加一个新的项目\\\"></nz-card-meta>\\n      </nz-card>\\n      <ng-template #addProject>\\n        <img alt=\\\" 添加项目\\\" src=\\\"./assets/images/plus.png\\\" />\\n      </ng-template>\\n    </div>\\n    <div nz-col nzXs=\\\"24\\\" nzSm=\\\"12\\\" nzMd=\\\"8\\\" nzLg=\\\"6\\\" nzXl=\\\"4\\\">\\n      <nz-card nzTitle=\\\"查看所有项目\\\" nzHoverable [nzCover]=\\\"listTemplate\\\" (click)=\\\"projectList()\\\">\\n        <nz-card-meta nzTitle=\\\"查看\\\" nzDescription=\\\"所有项目列表\\\"></nz-card-meta>\\n      </nz-card>\\n      <ng-template #listTemplate>\\n        <img alt=\\\"查看所有项目\\\" src=\\\"./assets/images/list.png\\\" />\\n      </ng-template>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<nz-table #basicTable [nzTotal]=\\\"pageData.total\\\" [(nzPageIndex)]=\\\"pageData.pageNumber\\\"\\n  [(nzPageSize)]=\\\"pageData.pageSize\\\" [nzFrontPagination]=\\\"false\\\" [nzShowPagination]=\\\"true\\\" nzShowSizeChanger nzShowTotal\\n  [nzLoading]=\\\"loading\\\" nzTitle=\\\"项目列表\\\" (nzPageIndexChange)=\\\"IndeChange($event)\\\" (nzPageSizeChange)=\\\"SizeChange($event)\\\"\\n  [nzData]=\\\"pageData.datas\\\">\\n  <thead>\\n    <tr>\\n      <th>项目名称</th>\\n      <th>生成模式</th>\\n      <th>作者</th>\\n      <th>操作</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let data of basicTable.data\\\">\\n      <td>{{data.projectInfo.projectName}}</td>\\n      <td>{{renderGeneratorMode(data)}}</td>\\n      <td>{{data.projectInfo.author}}</td>\\n      <td>\\n        <a (click)=\\\"build(data)\\\"\\n          *ngIf=\\\"data.projectInfo.id !== 0 && data.generatorModeConfigId !== 0 && data.builders.length > 0\\\">生成</a>\\n        <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n        <a (click)=\\\"gotoEdit(data.id)\\\">编辑</a>\\n        <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n        <a (click)=\\\"delproj(data.id)\\\">删除</a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</nz-table>\"","export default \"<nz-table #dynamicTable [nzScroll]=\\\"{ y: '500px' }\\\" nzBordered=\\\"true\\\" [nzData]=\\\"listOfData\\\">\\n  <thead>\\n    <tr>\\n      <th nzWidth=\\\"100px\\\">属性</th>\\n      <th nzWidth=\\\"8vw\\\">表名</th>\\n      <th nzWidth=\\\"8vw\\\">名称</th>\\n      <th nzWidth=\\\"10vw\\\">备注</th>\\n      <th nzWidth=\\\"10vw\\\">命名空间</th>\\n      <th nzWidth=\\\"8vw\\\">主键类型</th>\\n      <th nzRight=\\\"0px\\\">操作</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <ng-template ngFor let-data [ngForOf]=\\\"dynamicTable.data\\\">\\n      <tr>\\n        <td nzBreakWord nzLeft=\\\"0px\\\" nzShowExpand [(nzExpand)]=\\\"mapOfExpandData[data.name]\\\"></td>\\n        <td nzBreakWord nzLeft=\\\"100px\\\">{{ data.dbTableName }}</td>\\n        <td nzBreakWord>{{ data.name }}</td>\\n        <td nzBreakWord>{{ data.comment }}</td>\\n        <td nzBreakWord>{{ data.nameSpace }}</td>\\n        <td nzBreakWord>{{ data.primaryTypeName }}</td>\\n        <td nzBreakWord nzRight=\\\"0px\\\">\\n          <a href=\\\"#\\\">删除</a>\\n        </td>\\n      </tr>\\n      <tr [nzExpand]=\\\"mapOfExpandData[data.name]\\\">\\n        <td></td>\\n        <td colspan=\\\"7\\\">\\n          <nz-card [nzBordered]=\\\"false\\\" nzTitle=\\\"表属性\\\">\\n            <p *ngFor=\\\"let item of data.columnInfos\\\">\\n              <label class=\\\"lblCol\\\">名称:{{item.columnName}} </label>\\n              <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n              <label class=\\\"lblCol\\\">数据库名称: {{ item.dbColumnName }}</label>\\n              <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n              <label class=\\\"lblCol\\\">Csharp类型: {{ item.csType }}</label>\\n              <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n            </p>\\n          </nz-card>\\n          <nz-card [nzBordered]=\\\"false\\\" [nzTitle]=\\\"'导航属性'\\\">\\n            <p *ngFor=\\\"let item of data.navigateInfos\\\">\\n              <label class=\\\"lblCol\\\">名称:{{item.columnName}} </label>\\n              <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n              <label class=\\\"lblCol\\\">导航类型:{{ item.csType }}</label>\\n              <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n            </p>\\n          </nz-card>\\n        </td>\\n        <td></td>\\n      </tr>\\n    </ng-template>\\n  </tbody>\\n</nz-table>\"","\r\nexport class DataSource {\r\n    id: number;\r\n    name: string;\r\n    dbType: DataType;\r\n    connectionString: string;\r\n    generatorModeConfig: GeneratorModeConfig;\r\n    generatorModeConfigId: number;\r\n}\r\nexport class GeneratorModeConfig {\r\n    constructor(projectid: number) {\r\n        this.projectId = projectid;\r\n        this.generatorMode = 1;\r\n    }\r\n    id: number;\r\n    projectId: number;\r\n    generatorMode: GeneratorMode = 1;\r\n    dataSource: DataSource = new DataSource();\r\n    entityAssemblyName: string;\r\n    dataSourceId: number;\r\n    includeTables: string;\r\n    ignoreTables: string;\r\n    entityBaseName: string;\r\n}\r\nexport class TableInfo {\r\n    isServiceTable: boolean;\r\n    nameSpace: string;\r\n    importUsings: string[];\r\n    primaryTypeName: string;\r\n    comment: string;\r\n    name: string;\r\n    dbTableName: string;\r\n    columnInfos: ColumnInfo[] = new Array<ColumnInfo>();\r\n    navigateInfos: NavigateColumnInfo[] = new Array<NavigateColumnInfo>();\r\n}\r\n\r\nexport class ColumnInfo {\r\n    columnName: string;\r\n    comment: string;\r\n    dbColumnName: string;\r\n    dbType: string;\r\n    csType: string;\r\n}\r\n\r\n// tslint:disable-next-line: no-use-before-declare\r\nexport class NavigateColumnInfo extends ColumnInfo {\r\n    dbColumnName: string;\r\n    navigateTableInfo: TableInfo;\r\n    navigateCategory: NavigateCategory;\r\n}\r\n\r\n\r\nexport enum NavigateCategory {\r\n    OneToOne,\r\n    OneToMany,\r\n    None\r\n}\r\n\r\nexport enum GeneratorMode {\r\n    DbFirst,\r\n    CodeFirst\r\n}\r\n\r\nexport enum DataType {\r\n    MySql = 0,\r\n    SqlServer = 1,\r\n    PostgreSQL = 2,\r\n    Oracle = 3,\r\n    Sqlite = 4,\r\n    OdbcOracle = 5,\r\n    OdbcSqlServer = 6,\r\n    OdbcMySql = 7,\r\n    OdbcPostgreSQL = 8,\r\n    Odbc = 9,\r\n    OdbcDameng = 10,\r\n    MsAccess = 11\r\n}\r\n","import { ProjectInfo } from './projectInfo';\nimport { GeneratorModeConfig } from './generatormodeconfig';\nimport { Template } from 'src/app/template/modals/template';\n\nexport class Project {\n    id: number;\n    projectInfo: ProjectInfo;\n    projectInfoId: number;\n    generatorModeConfig: GeneratorModeConfig = new GeneratorModeConfig(this.projectInfoId);\n    generatorModeConfigId: number;\n    builders: BuilderOptions[] = new Array<BuilderOptions>();\n    globalBuilders: BuilderOptions[];\n}\nexport class BuilderOptions {\n    constructor(_type: BuilderType, _name: string) {\n        this.id = 0;\n        this.projectId = 0;\n        this.splitDot = '_';\n        this.suffix = '';\n        this.templateId = 0;\n        this.type = _type;\n        this.isServiceOnly = false;\n        this.mode = 0;\n        this.name = _name;\n        this.outPutPath = '';\n        this.fileExtensions = 'cs';\n        this.classBase = '';\n        this.prefix = '';\n        this.isIgnorePrefix = true;\n    }\n    id: number;\n    projectId: number;\n    project: Project;\n    classBase: string;\n    name: string;\n    isServiceOnly: boolean;\n    prefix: string;\n    splitDot: string;\n    isIgnorePrefix: boolean;\n    outPutPath: string;\n    mode: ConvertMode;\n    template: Template;\n    templateId: number;\n    suffix: string;\n    type: BuilderType;\n    fileExtensions: string;\n}\n\nexport enum BuilderType {\n    Builder,\n    GlobalBuilder\n}\n\nexport enum ConvertMode {\n    None,\n    AllLower,\n    AllUpper,\n    FirstUpper\n}\n","export class ProjectInfo {\r\n    id: number;\r\n    // 项目名——命名空间\r\n    projectName: string;\r\n    // 根目录\r\n    rootPath: string;\r\n    // 输出路径默认Output\r\n    outPutPath: string;\r\n    // 作者\r\n    author: string;\r\n}\r\n\r\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { BuilderOptions, BuilderType, Project } from '../../modals/project';\nimport { NzModalService, NzMessageService } from 'ng-zorro-antd';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-builder-container',\n  template: `\n    <nz-card style=\"width: 100%;\" nzTitle=\"配置构建器\" [nzExtra]=\"builderExtraTemplate\">\n      <nz-card-tab>\n        <nz-tabset  style='margin-bottom: 0px !important'>\n          <nz-tab  [nzTitle]=\"buildtitleTemplate\" *ngFor=\"let item of this.builders \">\n            <ng-template #buildtitleTemplate>\n              <div>\n                {{ item.name }}\n                <i nz-icon nzType=\"close\" (click)=\"removeBuilder(item.name,'builder')\" class=\"ant-tabs-close-x\"></i>\n              </div>\n            </ng-template>\n            <app-builder-option (callBack)=\"CallBack($event)\"  [projectid]=\"this.projectid\" *ngIf=\"item\" [builder]=\"item\">\n            </app-builder-option>\n          </nz-tab>\n        </nz-tabset>\n      </nz-card-tab>\n    </nz-card>\n    <ng-template #builderExtraTemplate>\n      <a (click)=\"Add()\">添加</a>\n    </ng-template>\n    <nz-modal [(nzVisible)]=\"isVisible\" nzTitle=\"添加构建器\" (nzOnOk)=\"builderAdd()\"\n      (nzOnCancel)=\"this.isVisible = false\">\n      构建器名：\n      <input nz-input id='key' [(ngModel)]=\"tag\">\n    </nz-modal>\n  `,\n  styles: [`\n  `]\n})\nexport class BuilderContainerComponent implements OnInit, OnChanges {\n  @Input() projectid = 0;\n  @Input() builders: BuilderOptions[] = new Array<BuilderOptions>();\n  @Input() type: BuilderType;\n  @Output() callBack: EventEmitter<BuilderOptions[]> = new EventEmitter();\n  protected isVisible = false;\n  protected tag = '';\n  constructor(private modalService: NzModalService,\n    private message: NzMessageService,\n    private client: HttpClient) {\n    console.log(this.projectid, 'init');\n  }\n  ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\n    this.builders = changes['builders']['currentValue'];\n    this.projectid = changes['projectid']['currentValue'];\n    console.log(this.projectid, 'changed');\n  }\n\n  ngOnInit() {\n  }\n  removeBuilder(key: string): void {\n    const builder = this.builders;\n    this.modalService.confirm({\n      nzTitle: '删除构建器',\n      nzContent: `<b style=\"color: red;\">是否要删除 ${key} 构建器的配置？</b>`,\n      nzOkText: '是',\n      nzOkType: 'danger',\n      nzOnOk: () => builder.splice(builder.findIndex(b => b.name === key), 1),\n      nzCancelText: '否',\n      nzOnCancel: () => console.log('Cancel')\n    });\n  }\n  remove(key: string) {\n    this.client.delete<boolean>(`/api/project/builder/${key}`).subscribe(res => {\n      if (res) {\n        this.message.success('删除成功');\n        return;\n      }\n      this.message.success('删除失败');\n    });\n  }\n  Add() {\n    this.isVisible = true;\n  }\n  CallBack(e: BuilderOptions): void {\n    if (this.builders.filter(x => x.name === e.name).length > 0) {\n      this.builders.filter(x => x.name === e.name)[0] = e;\n    } else {\n      this.builders.push(e);\n    }\n    this.callBack.emit(this.builders);\n  }\n  builderAdd() {\n    this.builders.push(new BuilderOptions(this.type, this.tag));\n    this.isVisible = false;\n  }\n\n}\n","import { Component, OnInit, Input, Output, OnChanges, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BuilderOptions, BuilderType } from '../../modals/project';\nimport { HttpClient } from '@angular/common/http';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { Template } from 'src/app/template/modals/template';\n\n@Component({\n  selector: 'app-builder-option',\n  templateUrl: './builderOption.component.html',\n  styles: ['']\n})\nexport class BuilderOptionComponent implements OnInit, OnChanges {\n  @Input() projectid = 0;\n  @Input() builder: BuilderOptions = new BuilderOptions(BuilderType.Builder, 'Entity');\n  @Output() callBack: EventEmitter<BuilderOptions> = new EventEmitter();\n  validateForm: FormGroup;\n  templateSel: boolean;\n  constructor(protected fb: FormBuilder, private client: HttpClient,\n    private message: NzMessageService,\n  ) {\n\n  }\n  ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\n    this.projectid = changes['projectid']['currentValue'];\n    if (!this.projectid || this.projectid === 0) {\n      this.message.warning('未检测到项目');\n    }\n  }\n  submitForm(): void {\n    for (const i in this.validateForm.controls) {\n      if (this.validateForm.controls.hasOwnProperty(i)) {\n        this.validateForm.controls[i].markAsDirty();\n        this.validateForm.controls[i].updateValueAndValidity();\n      }\n    }\n    if (!this.validateForm.invalid) {\n      this.builder.projectId = this.projectid;\n      this.builder.fileExtensions = this.validateForm.controls['fileExtensions'].value;\n      this.builder.isIgnorePrefix = this.validateForm.controls['isIgnorePrefix'].value;\n      this.builder.name = this.validateForm.controls['name'].value;\n      this.builder.prefix = this.validateForm.controls['prefix'].value;\n      this.builder.splitDot = this.validateForm.controls['splitDot'].value;\n      this.builder.outPutPath = this.validateForm.controls['outPutPath'].value;\n      this.builder.mode = this.validateForm.controls['mode'].value;\n      this.builder.suffix = this.validateForm.controls['suffix'].value;\n      this.builder.classBase = this.validateForm.controls['classBase'].value;\n      if (this.builder.id && this.builder.id !== 0) {\n        this.UpdateBuilder();\n        return;\n      } this.AddBuilder();\n    }\n  }\n\n  ngOnInit() {\n    this.builder.template = new Template();\n    this.validateForm = this.fb.group({\n      name: [`${this.builder.name}`, [Validators.required]],\n      isServiceOnly: [`${this.builder.isServiceOnly}`, [Validators.required]],\n      prefix: [`${this.builder.prefix}`, []],\n      splitDot: [`${this.builder.splitDot}`, []],\n      isIgnorePrefix: [`${this.builder.isIgnorePrefix}`, [Validators.required]],\n      outPutPath: [`${this.builder.outPutPath}`, [Validators.required]],\n      mode: [`${this.builder.mode}`, [Validators.required]],\n      suffix: [`${this.builder.suffix}`, []],\n      classBase: [`${this.builder.classBase}`, []],\n      fileExtensions: [`${this.builder.fileExtensions}`, [Validators.required]]\n    });\n    console.log(this.validateForm, 'modal');\n  }\n  AddBuilder(): void {\n    this.client.post<BuilderOptions>(`/api/project/Builder/New`, this.builder).subscribe(res => {\n      this.message.success(`成功上传配置`);\n      this.builder = res;\n      console.log(res);\n      this.callBack.emit(this.builder);\n    }, err => {\n      console.log(err);\n      this.message.error(err);\n    });\n  }\n  UpdateBuilder(): void {\n    this.client.put<BuilderOptions>(`/api/project/Builder`, this.builder).subscribe(res => {\n      this.message.success(`成功修改配置`);\n      this.builder = res;\n      this.callBack.emit(this.builder);\n    }, err => {\n      this.message.error(err);\n    });\n  }\n  selectTemplate(): void {\n    this.templateSel = true;\n  }\n  selectCallBack(e: Template): void {\n    console.log(e);\n    this.builder.templateId = e.id;\n    this.builder.template = e;\n    this.templateSel = false;\n  }\n\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NzModalService, NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-build-task',\n  template: `\n  <nz-spin *ngIf=\"this.loading\" nzTip=\"正在生成代码中\">\n      <nz-alert\n        nzType=\"info\"\n        nzMessage=\"后台正在生成代码中\"\n        nzDescription=\"正在为您生成代码\"\n      >\n      </nz-alert>\n    </nz-spin>\n  `,\n  styles: ['']\n})\nexport class BuildTaskComponent implements OnInit, OnChanges {\n  @Input() projectid: number;\n  @Output() callBack: EventEmitter<boolean> = new EventEmitter();\n  loading = true;\n  constructor(private client: HttpClient,\n    private message: NzMessageService,\n    private activateInfo: ActivatedRoute) {\n\n  }\n  ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\n    this.projectid = changes['projectid']['currentValue'];\n    if (this.projectid && this.projectid !== 0) {\n      this.run(this.projectid);\n    }\n  }\n\n  ngOnInit() {\n\n  }\n  run(id) {\n    this.client.post(`/api/project/task/build/${this.projectid}`, null)\n      .subscribe(res => {\n        this.loading = false;\n        this.message.success(`成功生成`);\n        this.callBack.emit(true);\n      }, err => {\n        this.message.error(err);\n        this.loading = false;\n        this.callBack.emit(false);\n      });\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChange } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NzModalService, NzMessageService } from 'ng-zorro-antd';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GeneratorModeConfig, GeneratorMode } from '../modals/generatormodeconfig';\r\nimport { Item } from '../modals/item';\r\nimport { Project } from '../modals/project';\r\n\r\n@Component({\r\n  selector: 'app-generator-mode',\r\n  template: `\r\n    <form nz-form [formGroup]=\"validateForm\" >\r\n    <nz-form-item>\r\n        <nz-form-label [nzSm]=\"4\" [nzXs]=\"24\" nzFor=\"generatorMode\" nzRequired>\r\n          <span>生成器模式\r\n            <i nz-icon nz-tooltip nzTitle=\"CodeFirst从代码实体派生所有逻辑DbFirst从数据库结构派生\" nzType=\"question-circle\"\r\n              nzTheme=\"outline\"></i>\r\n          </span>\r\n        </nz-form-label>\r\n        <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\" nzErrorTip=\"CodeFirst/DbFirst\">\r\n          <nz-radio-group formControlName=\"generatorMode\">\r\n            <label nz-radio [nzDisabled]=\"true\" nzValue=0>DbFirst</label>\r\n            <label nz-radio nzValue=1>CodeFirst(当前Web项目)</label>\r\n          </nz-radio-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-card  nzTitle=\"模式相关配置项\">\r\n        <div id=\"dbSetting\" *ngIf=\"this.validateForm.get('generatorMode').value === '0'\">\r\n          <div nz-col [nzSpan]=\"10\">\r\n            <nz-form-item>\r\n              <nz-form-label nz-col [nzSm]=\"6\" [nzXs]=\"24\">数据库类型</nz-form-label>\r\n              <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\">\r\n                <nz-select formControlName=\"dataSourceType\">\r\n                  <nz-option *ngFor=\"let p of this.dataSourceType\" [nzValue]=\"p\" [nzLabel]=\"p\">\r\n                  </nz-option>\r\n                </nz-select>\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </div>\r\n          <div nz-col [nzSpan]=\"14\">\r\n            <nz-form-item>\r\n              <nz-form-label nz-col [nzSm]=\"4\" [nzXs]=\"24\">数据库名</nz-form-label>\r\n              <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\">\r\n                <input nz-input type=\"text\" formControlName=\"dataSourceDb\" id=\"dataSourceDb\" name='dataSourceDb'\r\n                  placeholder=\"数据库名称\" />\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </div>\r\n          <div nz-col [nzSpan]=\"10\">\r\n            <nz-form-item>\r\n              <nz-form-label nz-col [nzSm]=\"8\" [nzXs]=\"24\">数据库连接字符串</nz-form-label>\r\n              <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\">\r\n                <input nz-input type=\"text\" formControlName=\"dataSourceConnectionStr\" id=\"dataSourceConnectionStr\"\r\n                  name='dataSourceConnectionStr' placeholder=\"数据库连接字符串\" />\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </div>\r\n        </div>\r\n        <div id=\"baseEntity\" *ngIf=\"this.validateForm.get('generatorMode').value === '1'\">\r\n          <div nz-col [nzSpan]=\"14\">\r\n            <nz-form-item>\r\n              <nz-form-label nz-col [nzSm]=\"4\" [nzXs]=\"24\">实体基类</nz-form-label>\r\n              <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\" >\r\n                    <nz-select formControlName=\"entityAssemblyName\" nzAllowClear nzPlaceHolder=\"选择程序集\" (ngModelChange)=\"assemblyChange($event)\">\r\n                  <nz-option *ngFor=\"let item of assemblyList\" [nzLabel]=\"item.key\" [nzValue]=\"item.value\" ></nz-option>\r\n                </nz-select>\r\n              </nz-form-control>\r\n              <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\" >\r\n                    <nz-select formControlName=\"entityBaseName\" nzAllowClear nzPlaceHolder=\"选择基类\">\r\n                  <nz-option *ngFor=\"let item of itemList\" [nzLabel]=\"item.key\" [nzValue]=\"item.value\"></nz-option>\r\n                </nz-select>\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </div>\r\n          <div nz-col [nzSpan]=\"8\">\r\n            <nz-form-control  [nzSm]=\"5\" [nzXs]=\"24\">\r\n              <button nz-button style=\"width:100%\" (click)=\"preview()\" > 查看</button>\r\n            </nz-form-control>\r\n            <nz-form-control  [nzSm]=\"5\" [nzXs]=\"24\">\r\n              <button nz-button style=\"width:100%\" (click)='submitForm()' [nzType]=\"'primary'\">提交</button>\r\n            </nz-form-control>\r\n          </div>\r\n        </div>\r\n      </nz-card>\r\n      <nz-form-item>\r\n      <div nz-col [nzSpan]=\"24\" *ngIf=\"this.previewShow\">\r\n        <app-table-preview  (allTable)=\"getAllTable($event)\" [entityAssemblyName]=\"this.validateForm.get('entityAssemblyName').value\"  [entityBaseName]=\"this.validateForm.get('entityBaseName').value\">\r\n        </app-table-preview>\r\n      </div>\r\n      </nz-form-item>\r\n</form>\r\n    `\r\n})\r\n\r\nexport class GeneratorModeComponent implements OnInit, OnChanges {\r\n\r\n  @Output() callBack: EventEmitter<Project> = new EventEmitter();\r\n  @Input() project: Project = new Project();\r\n  validateForm: FormGroup;\r\n  itemList: Item[];\r\n  assemblyList: Item[];\r\n  previewShow: boolean;\r\n  dataSourceType = ['MySql', 'SqlServer', 'PostgreSQL', 'Oracle',\r\n    'Sqlite', 'OdbcOracle', 'OdbcSqlServer', 'OdbcMySql',\r\n    'OdbcPostgreSQL', 'Odbc', 'OdbcDameng', 'MsAccess'];\r\n  generatorModeConfig: GeneratorModeConfig;\r\n  constructor(private fb: FormBuilder, private modalService: NzModalService,\r\n    private message: NzMessageService,\r\n    private router: Router, private client: HttpClient) {\r\n    console.log(this.project, 'constructor');\r\n  }\r\n\r\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\r\n    this.project = changes['project']['currentValue'];\r\n    this.generatorModeConfig = this.project.generatorModeConfig;\r\n    if (this.project.generatorModeConfig) {\r\n      console.log(this.project, 'initValidateForm');\r\n      this.initValidateForm();\r\n      this.baseEntity();\r\n    }\r\n  }\r\n  submitForm() {\r\n    this.generatorModeConfig.projectId = this.project.id;\r\n    this.generatorModeConfig.generatorMode = this.validateForm.controls['generatorMode'].value;\r\n    this.generatorModeConfig.entityBaseName = this.validateForm.controls['entityBaseName'].value;\r\n    this.generatorModeConfig.entityAssemblyName = this.validateForm.controls['entityAssemblyName'].value;\r\n    if (!this.generatorModeConfig.generatorMode) {\r\n      this.message.warning(`未检测到模式无法提交`);\r\n      return;\r\n    }\r\n    if (!this.generatorModeConfig.projectId) {\r\n      this.message.warning(`未检测到相关项目 请先提交项目详情`);\r\n      return;\r\n    }\r\n    if (this.generatorModeConfig.id && this.generatorModeConfig.id !== 0) {\r\n      this.updateConfig();\r\n      return;\r\n    }\r\n    this.newConfig();\r\n  }\r\n\r\n  newConfig() {\r\n    this.client.post<GeneratorModeConfig>(`/api/project/Config/New`, this.generatorModeConfig).subscribe(res => {\r\n      this.project.generatorModeConfig = res;\r\n      this.callBack.emit(this.project);\r\n      this.message.success(`成功提交,可以执行下一步`);\r\n    });\r\n  }\r\n  updateConfig(): void {\r\n    this.client.put<GeneratorModeConfig>(`/api/project/Config`, this.generatorModeConfig).subscribe(res => {\r\n      this.project.generatorModeConfig = res;\r\n      this.callBack.emit(this.project);\r\n      this.message.success(`成功更新,可以执行下一步`);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAssemblies();\r\n    if (this.project.generatorModeConfig) {\r\n      this.generatorModeConfig = this.project.generatorModeConfig;\r\n    } else {\r\n      this.generatorModeConfig = new GeneratorModeConfig(this.project.id);\r\n    }\r\n    this.initValidateForm();\r\n  }\r\n\r\n  initValidateForm() {\r\n    this.validateForm = this.fb.group({\r\n      generatorMode: [`${this.generatorModeConfig.generatorMode}`, [Validators.required]],\r\n      entityBaseName: [`${this.generatorModeConfig.entityBaseName}`, [Validators.required]],\r\n      entityAssemblyName: [`${this.generatorModeConfig.entityAssemblyName}`, [Validators.required]]\r\n    });\r\n  }\r\n  getAssemblies() {\r\n    this.client.get<Item[]>(`/api/Assemblies`).subscribe(res => {\r\n      this.assemblyList = res;\r\n    });\r\n  }\r\n  assemblyChange(e): void {\r\n    console.log(e);\r\n    this.baseEntity();\r\n  }\r\n  baseEntity(): void {\r\n    // this.validateForm.setValue({ 'entityBaseName': [''] });\r\n    this.client.get<Item[]>(`/api/BaseClass/${this.validateForm.controls['entityAssemblyName'].value}`).subscribe((data) => {\r\n      this.itemList = data;\r\n    });\r\n  }\r\n  preview(): void {\r\n    this.validateForm.controls['entityBaseName'].markAsDirty();\r\n    this.validateForm.controls['entityBaseName'].updateValueAndValidity();\r\n    if (!this.validateForm.invalid) {\r\n      console.log(2);\r\n      this.generatorModeConfig.entityAssemblyName = this.validateForm.controls['entityAssemblyName'].value;\r\n      this.generatorModeConfig.generatorMode = this.validateForm.controls['generatorMode'].value;\r\n      this.generatorModeConfig.entityBaseName = this.validateForm.controls['entityBaseName'].value;\r\n      this.previewShow = !this.previewShow;\r\n    }\r\n  }\r\n  getAllTable(e): void {\r\n    if (this.project) {\r\n      this.generatorModeConfig.projectId = this.project.id;\r\n    } else {\r\n      this.message.warning(`无法找到项目`);\r\n    }\r\n    console.log(this.generatorModeConfig);\r\n  }\r\n}\r\n","import { Component, OnInit, Type } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Project, BuilderOptions, BuilderType } from '../modals/project';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { Item } from '../modals/item';\n\n@Component({\n  selector: 'app-newproject',\n  templateUrl: './newproject.component.html',\n  styles: [`\n\n  .stepbtn{\n    margin:10px;\n  }\n\n  .steps-content {\n        margin-top: 16px;\n        border: 1px dashed #e9e9e9;\n        border-radius: 6px;\n        background-color: #fafafa;\n        min-height: 500px;\n        text-align: left;\n        padding-top: 80px;\n      }\n  `]\n})\nexport class NewProjectComponent implements OnInit {\n  current = 0;\n  project: Project;\n  projectId: number;\n  tempTab: string;\n  validateForm: FormGroup;\n  itemList: Item[];\n  isVisible: Map<string, boolean> = new Map().set('builder', false).set('globalBuilder', false);\n  tag: string;\n  builderVisable = false;\n  gBuilderVisable = false;\n  csprojPath = '';\n  previewShow = false;\n  currentFinish = new Map<number, boolean>();\n  constructor(private fb: FormBuilder, private modalService: NzModalService,\n    private message: NzMessageService, private activateInfo: ActivatedRoute,\n    private router: Router, private client: HttpClient) {\n    for (let index = 0; index < 6; index++) {\n      this.currentFinish.set(index, false);\n    }\n    this.project = new Project();\n    this.activateInfo.queryParams.subscribe(queryParams => {\n      this.projectId = queryParams.id;\n      if (this.projectId && this.projectId !== 0) {\n        // this.loadProject(this.projectId);\n      }\n    });\n  }\n\n\n\n  callBack(e): void {\n    this.project = e;\n    if (this.project.projectInfoId !== 0) {\n      this.currentFinish[0] = true;\n    }\n    if (this.project.generatorModeConfigId !== 0) {\n      this.currentFinish[1] = true;\n    }\n    if (this.project.builders.length > 0) {\n      this.currentFinish[2] = true;\n    }\n    this.currentFinish[3] = true;\n    console.log(this.currentFinish, 'onload');\n    this.projectId = e.id;\n    this.currentFinish[this.current] = true;\n  }\n\n  builderCallBack(e: BuilderOptions[]): void {\n    console.log(e);\n    this.project.builders = e;\n    if (this.project.builders.length > 0) {\n      this.currentFinish[2] = true;\n      this.currentFinish[3] = true;\n    }\n  }\n  IsFinish(e: boolean): void {\n    if (e) {\n      this.current += 1;\n    }\n  }\n\n  pre(): void {\n    this.current -= 1;\n  }\n  next(): void {\n    this.current += 1;\n  }\n\n  ngOnInit(): void {\n    this.project.builders = new Array<BuilderOptions>();\n    this.project.globalBuilders = new Array<BuilderOptions>();\n  }\n  finished() {\n    this.router.navigateByUrl(`project/home`);\n  }\n  getCodePath() {\n    return `${this.project.projectInfo.rootPath}\\\\${this.project.projectInfo.outPutPath}\\\\`;\n  }\n  back(e): void {\n    this.router.navigateByUrl(`project/home`);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NzModalService, NzMessageService } from 'ng-zorro-antd';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { ProjectInfo } from '../modals/projectInfo';\nimport { Project } from '../modals/project';\n\n@Component({\n  selector: 'app-project-info',\n  template: `\n<form nz-form [formGroup]=\"validateForm\" (ngSubmit)=\"submitForm()\">\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired nzFor=\"projectName\">项目名称</nz-form-label>\n        <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\" nzErrorTip=\"这里写下项目名称\">\n          <input nz-input formControlName=\"projectName\" id=\"projectName\" placeholder=\"项目名称\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"rootPath\" nzRequired>项目根目录路径</nz-form-label>\n        <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\" nzErrorTip=\"根目录路径必须填写\">\n          <input nz-input type=\"text\" id=\"rootPath\" formControlName=\"rootPath\" placeholder=\"项目文件最终输出路径=项目根目录路径\\输出路径\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"outPutPath\" nzRequired>输出路径</nz-form-label>\n        <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\" nzErrorTip=\"输出路径必须填写\" >\n          <input nz-input type=\"text\" formControlName=\"outPutPath\" id=\"outPutPath\" placeholder=\"项目文件最终输出路径=项目根目录路径\\输出路径\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzFor=\"author\" nzRequired>作者</nz-form-label>\n        <nz-form-control [nzSm]=\"10\" [nzXs]=\"24\"  nzErrorTip=\"作者必须填写\">\n          <input nz-input type=\"text\" formControlName=\"author\" id=\"author\" placeholder=\"作者会提现在代码生成器的备注中\" />\n        </nz-form-control>\n      </nz-form-item>\n      <nz-form-item>\n        <nz-form-control  [nzOffset]=\"6\" [nzXs]=\"18\"   >\n          <button nz-button type='submit'   [nzType]=\"'primary'\" >提交</button>\n        </nz-form-control>\n      </nz-form-item>\n</form>\n  `,\n  styles: ['']\n})\nexport class ProjectinfoComponent implements OnInit {\n\n  @Output() callBack: EventEmitter<Project> = new EventEmitter();\n  @Input() projectId: number;\n  validateForm: FormGroup;\n  projectInfo = new ProjectInfo();\n  private isEdite = false;\n  constructor(private fb: FormBuilder, private modalService: NzModalService,\n    private message: NzMessageService, private activateInfo: ActivatedRoute,\n    private router: Router, private client: HttpClient) {\n    this.activateInfo.queryParams.subscribe(queryParams => {\n      this.projectId = queryParams.id;\n      if (this.projectId !== 0) {\n        this.isEdite = true;\n      }\n    });\n  }\n  submitForm(): void {\n    for (const key in this.validateForm.controls) {\n      if (this.validateForm.controls.hasOwnProperty(key)) {\n        this.validateForm.controls[key].markAsDirty();\n        this.validateForm.controls[key].updateValueAndValidity();\n      }\n    }\n    this.projectInfo.outPutPath = this.validateForm.controls['outPutPath'].value;\n    this.projectInfo.author = this.validateForm.controls['author'].value;\n    this.projectInfo.projectName = this.validateForm.controls['projectName'].value;\n    this.projectInfo.rootPath = this.validateForm.controls['rootPath'].value;\n    if (!this.validateForm.invalid) {\n      this.submit();\n    }\n\n  }\n  ngOnInit() {\n    if (this.projectId) {\n      this.loadProject(this.projectId);\n    }\n    this.controlerLoad();\n  }\n  controlerLoad(): void {\n    this.validateForm = this.fb.group({\n      projectName: [this.projectInfo.projectName, [Validators.required, Validators.maxLength(255)]],\n      rootPath: [this.projectInfo.rootPath, [Validators.required, Validators.maxLength(255)]],\n      outPutPath: [this.projectInfo.outPutPath, [Validators.required, Validators.maxLength(255)]],\n      author: [this.projectInfo.author, [Validators.required, Validators.maxLength(255)]]\n    });\n  }\n\n  loadProject(id: number): void {\n    this.client.get<Project>(`/api/project/${id}`).subscribe(res => {\n      this.projectInfo = res.projectInfo;\n      this.callBack.emit(res);\n      this.controlerLoad();\n    });\n  }\n  submit(): void {\n    console.log(this.projectInfo, 'info');\n    if (this.projectInfo.id && this.projectInfo.id !== 0) {\n      console.log(`put`);\n      this.client.put<Project>(`/api/project/Info`, this.projectInfo)\n        .subscribe((res) => {\n          this.message.success('修改成功');\n          this.callBack.emit(res);\n        });\n      return;\n    }\n    this.client.post<Project>(`/api/project/Info/New`, this.projectInfo)\n      .subscribe((res) => {\n        this.message.success('添加成功 可以进行下一步');\n        this.callBack.emit(res);\n        console.log(this.callBack);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  newProject(): void {\n    this.router.navigateByUrl('/project/new');\n  }\n  projectList(): void {\n    this.router.navigateByUrl('/project/list');\n  }\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectComponent } from './project.component';\nimport { NewProjectComponent } from './newproject/newproject.component';\nimport { BuilderOptionComponent } from './newproject/builderOption/builderOption.component';\nimport { ProjectRoutingModule } from './project.routing.module';\nimport { ProjectListComponent } from './projectList/projectList.component';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { FormsModule } from '@angular/forms';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TablePreViewComponent } from './tablePreview/tablePreview.component';\nimport { TemplateModule } from '../template/template.module';\nimport { ProjectinfoComponent } from './newproject/projectinfo.component';\nimport { GeneratorModeComponent } from './newproject/generatormode.component';\nimport { BuilderContainerComponent } from './newproject/builderOption/BuilderContainer.component';\nimport { BuildTaskComponent } from './newproject/buildtask.component';\n// import { Http } from '../base/webapi';\n@NgModule({\n  exports: [ProjectComponent, NewProjectComponent, BuilderOptionComponent, ProjectinfoComponent,\n    GeneratorModeComponent, BuilderContainerComponent, BuildTaskComponent],\n  imports: [\n    CommonModule,\n    ProjectRoutingModule,\n    NgZorroAntdModule,\n    NzFormModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    TemplateModule\n  ],\n  declarations: [ProjectComponent, NewProjectComponent, TablePreViewComponent, ProjectinfoComponent, GeneratorModeComponent,\n    BuilderContainerComponent, ProjectListComponent, BuilderOptionComponent, BuildTaskComponent]\n})\nexport class ProjectModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { ProjectComponent } from './project.component';\nimport { NewProjectComponent } from './newproject/newproject.component';\nimport { ProjectListComponent } from './projectList/projectList.component';\n\nconst routes: Routes = [\n  {\n    path: 'home', component: ProjectComponent,\n    data: {\n      breadcrumb: '项目主页'\n    }\n  },\n  {\n    path: 'new', component: NewProjectComponent,\n    data: {\n      breadcrumb: '新增项目'\n    }\n  },\n  {\n    path: 'list', component: ProjectListComponent,\n    data: {\n      breadcrumb: '项目列表'\n    }\n  }\n];\n\nexport const ProjectRoutes = RouterModule.forChild(routes);\n\n\n@NgModule({\n  imports: [\n    ProjectRoutes\n  ]\n})\nexport class ProjectRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdExpc3QvcHJvamVjdExpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Project } from '../modals/project';\nimport { PageView } from 'src/app/base/modalbase';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-projectlist',\n  templateUrl: './projectList.component.html',\n  styleUrls: ['./projectList.component.css']\n})\nexport class ProjectListComponent implements OnInit {\n\n  pageData: PageView<Project>;\n  loading = false;\n  constructor(private client: HttpClient, private router: Router\n    , private message: NzMessageService) {\n    this.pageData = new PageView();\n  }\n  loadData() {\n    this.loading = true;\n    this.client.get<PageView<Project>>(`/api/project/page?PageSize=${this.pageData.pageSize}&PageNumber=${this.pageData.pageNumber}`)\n      .subscribe(\n        (data) => {\n          this.pageData = data;\n          this.loading = false;\n        },\n        error => {\n          console.log(error);\n          this.loading = false;\n        }\n      );\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  IndeChange(e): void {\n    this.pageData.pageNumber = e;\n    this.loadData();\n  }\n  SizeChange(e): void {\n    this.pageData.pageSize = e;\n    this.loadData();\n  }\n  delproj(id: number): void {\n    this.client.delete<number>(`api/project/${id}`).subscribe(res => {\n      if (res > 0) {\n        this.message.success(`删除成功`);\n        this.loadData();\n      }\n    });\n  }\n  renderGeneratorMode(data: Project): string {\n    if (data.generatorModeConfig) {\n      return data.generatorModeConfig.generatorMode === 0 ? 'DbFirst' : 'CodeFirst';\n    }\n    return '';\n  }\n  gotoEdit(id: number): void {\n    this.router.navigate(['project/new'], {\n      queryParams: {\n        id: id\n      }\n    });\n  }\n  build(data: Project): void {\n    this.client.post(`/api/project/task/build/${data.id}`, null).subscribe(res => {\n      this.message.success(`生成成功---地址${data.projectInfo.rootPath}\\\\${data.projectInfo.outPutPath}`);\n    });\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { TableInfo, ColumnInfo } from '../modals/tableInfo';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-table-preview',\n  templateUrl: './tablePreview.component.html',\n  styles: [`\n  .lblCol{width:20vw; display:inline-block;}\n  `]\n})\nexport class TablePreViewComponent implements OnInit {\n\n  @Input() entityBaseName = '';\n  @Input() entityAssemblyName = '';\n  @Output() allTable: EventEmitter<TableInfo[]> = new EventEmitter();\n  listOfData: TableInfo[];\n  mapOfExpandData: { [key: string]: boolean } = {};\n  mapOfNavExpandData: { [key: string]: boolean } = {};\n  constructor(private client: HttpClient) {\n\n  }\n\n  ngOnInit() {\n    this.client\n      .get<TableInfo[]>(`/api/AllTable/${this.entityAssemblyName}/${this.entityBaseName}`)\n      .subscribe((data) => {\n        this.listOfData = data;\n        this.allTable.emit(this.listOfData);\n      });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}