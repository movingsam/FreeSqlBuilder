@using FreeSqlBuilder.TemplateEngine.Utilities
@using FreeSqlBuilder.TemplateEngine
@model FreeSqlBuilder.TemplateEngine.BuildTask
@{
    Layout = "_Layout.cshtml";
    var project = Model.Project;
    var table = Model.CurrentTable;    
    var navigates = Model.GetNavigates();
}


@table.GetNameSpaceUsing()

namespace @(project.ProjectInfo.ProjectName).@(Model.CurrentBuilder.ReplaceTablePath(table.CsName).Replace("/","."))
{
@($"{(string.IsNullOrWhiteSpace(table.Comment) ? table.CsName : table.Comment)}服务".GetCSharpSummary())
    public class  @(Model.CurrentBuilder.GetName(table.CsName)) : ServiceBase, I@(Model.CurrentBuilder.GetName(table.CsName))
    {
    private readonly I@(project.GetBuilder("Repository").GetName(table.CsName))  _@(table.CsName.ToLower())Rep;
    @foreach (var navigate in navigates)
    {
       
        @:private readonly I@(project.GetBuilder("Repository").GetName(navigate.CsName)) _@(navigate.CsName.ToLower())Rep;
        
    }

    @("构造函数".GetCSharpSummary())
    public @(Model.CurrentBuilder.GetName(table.CsName))(IServiceProvider service):base(service)
    {
    _@(table.CsName.ToLower() + "Rep") = service.GetRequiredService<@($"I{project.GetBuilder("Repository").GetName(table.CsName)}")>();
        @foreach (var navigate in navigates)
        {
            @: _@(navigate.CsName.ToLower() + "Rep") = service.GetRequiredService<@($"I{project.GetBuilder("Repository").GetName(navigate.CsName)}")>();
        }
    }

    @{ await Html.RenderPartialAsync("CURD/_CRUD.cshtml", new CurdTask(Model, table)); }
    @foreach (var navigate in navigates)
    {
        @:@{ await Html.RenderPartialAsync("CURD/_CRUD.cshtml", new CurdTask(Model, navigate)); }
    }
    }
}
