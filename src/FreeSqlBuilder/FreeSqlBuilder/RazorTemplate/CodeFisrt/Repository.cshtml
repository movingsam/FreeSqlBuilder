@using FreeSqlBuilder.TemplateEngine.Utilities
@model FreeSqlBuilder.TemplateEngine.BuildTask
@{
    Layout = "_Layout.cshtml";
    var project = Model.Project;
    var table = Model.CurrentTable;
    var primaryKeyType = table.GetPrimarysName();
    var name = Model.CurrentBuilder.GetName(table.CsName);
    var isTree = (table.Properties.Keys.Intersect(new[] { "Level", "ParentId", "Parent","Children","NodePath","IsDeleted","Enabled" })).Count() ==7;
    var baseClass = isTree ? $"TreeRepository<{table.CsName},{table.GetPrimarysName()},{table.GetPrimarysName()}?,I{project.ProjectInfo.ProjectName}DbContext>,I{name}"
        : $"RepositoryBase<{table.CsName},I{project.ProjectInfo.ProjectName}DbContext>,I{name}";
}

using System;
using System.Collections.Generic;
using System.Text;
using SFast.Infrastructure.Datas.Repository;
using SFast.Core;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using @table.Type.Namespace;
using SFast.IRepositories;

namespace @(project.ProjectInfo.ProjectName).@(Model.CurrentBuilder.ReplaceTablePath(table.CsName).Replace("/","."))
{

@($"{table.Comment}仓储".GetCSharpSummary())
public class @(name) : @baseClass
    {
        @("构造函数".GetCSharpSummary())
        public @(name)(IServiceProvider service,ILogger<@(name)> logger) : base(service,logger)
        {
        }
    }
}
    
